<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "PhotoEditorViewController.viewDidLoad():PhotoEditorViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in TimelineModel.loadNotes(with:completion:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "option">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:type:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.statusCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.getCellModel(_:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "post">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.loadNotes(untilId:completion:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "includeReplies">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.shapeCell(item:cachedNotes:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.displayName">
            </PersistentString>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
            <PersistentString
               value = "item.note">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.scrollViewDidScroll(_:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tlScrollBegining">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in HomeViewModel.init(disposeBag:):HomeViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "posts">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.viewDidLoad():TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.mainTableView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.analyzeHyperLink(_:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "header">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.updateReaction(targetNoteId:reaction:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel[targetIndex]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.timelineDidScroll(_:scroll:):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pagerTab.frame.origin.y">
            </PersistentString>
            <PersistentString
               value = "containerScrollView.contentOffset.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiView.adjustFontSize():EmojiView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.hyperUser(note:):TimelineModel.swift">
      </ContextState>
      <ContextState
         contextName = "MisskeyKit.Streaming.handleEvent(rawJson:):Streaming.swift">
         <PersistentStrings>
            <PersistentString
               value = "ids[id]">
            </PersistentString>
            <PersistentString
               value = "channel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiHandler.init():EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "defaultEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:type:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "auth.getAPIKey()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.scrollViewDidScroll(_:):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.contentOffset.y">
            </PersistentString>
            <PersistentString
               value = "scrollView as! UIScrollView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewControllers():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.Emojis.getCustom(completion:):Emoji.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupProfileGesture():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "iconView.isUserInteractionEnabled">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationCell.generateEmojiView():NotificationCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame">
            </PersistentString>
            <PersistentString
               value = "basePosition">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.initialize(hasFile:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.fileImageView.arrangedSubviews">
            </PersistentString>
            <PersistentString
               value = "self.fileImageHeightConstraint">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.setupNavTab():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineModel.loadNotes(with:completion:):TimelineModel.swift">
      </ContextState>
      <ContextState
         contextName = "ReactionCell.loadNib():ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "UINib(nibName: &quot;ReactionCell&quot;, bundle: Bundle.main).instantiate(withOwner: self, options: nil).first">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:data:fileType:type:missingCount:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "resultJson.decodeJSON(type)">
            </PersistentString>
            <PersistentString
               value = "json">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PostModel.uploadFile(_:completion:):PostModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "result.id">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(id:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupComponents():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.noteView.attributedText">
            </PersistentString>
            <PersistentString
               value = "self.iconView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.getFooterTabSize(height:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "bottomPadding">
            </PersistentString>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.setupCell(_:_:_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.shapeCell(item:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "cachedNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.init(type:includeReplies:onlyFiles:userId:listId:disposeBag:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellsModel">
            </PersistentString>
            <PersistentString
               value = "type.needsStreaming ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:data:type:missingCount:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "response!.statusCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostDetailViewController.loadView():PostDetailViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavBarPageViewController.touchesMoved(_:with:):NavBarPageViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "dxProportion">
            </PersistentString>
            <PersistentString
               value = "self.view.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.parent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.tappedReaction(noteId:hasMarked:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.showNotificationsView():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.notificationsView!.frame">
            </PersistentString>
            <PersistentString
               value = "self.notificationsViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.viewDidAppear(_:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.setupFileImage(_:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.fileImageHeightConstraint">
            </PersistentString>
            <PersistentString
               value = "self.fileImageView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.getCell(cell:item:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cachedNotes">
            </PersistentString>
            <PersistentString
               value = "item.ago">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.viewWillAppear(_:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(index:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.reactionGenCellIndex">
            </PersistentString>
            <PersistentString
               value = "self.cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.loadNotes(untilId:completion:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #3 in HomeViewController.setupCell(_:_:_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tableView(_:estimatedHeightForRowAt:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellHeightCache">
            </PersistentString>
            <PersistentString
               value = "self.viewModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.shapeNote(identifier:note:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "treatedNote[identifier]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewController.setupDataSource():TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.mainTableView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PageViewController.nowIndex.willset:PageViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionCell.isMyReaction.didset:ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "isMyReaction">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tabItems():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.showProfileView(userId:isMe:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "navigationController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.initialize():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "reactionsStackView.arrangedSubviews.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidLoad():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " MisskeyKit.auth.appSecret">
            </PersistentString>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
            <PersistentString
               value = "UIScreen.main.bounds.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionCell.changeCornerRadius():ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.layer.cornerRadius">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(allClear:baseNoteId:baseEqual:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.tappedReaction(noteId:hasMarked:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel.filter({ $0.baseNoteId == noteId })">
            </PersistentString>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.layoutSubviews():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.replyButton.titleLabel?.font">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostDetailViewController.item.didset:PostDetailViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidLayoutSubviews():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " self.pageView.frame.origin.y">
            </PersistentString>
            <PersistentString
               value = "self.pageView.frame.height">
            </PersistentString>
            <PersistentString
               value = "self.view.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.footerTab.frame.origin.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tableView(_:willDisplay:forRowAt:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellHeightCache">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tappedHome():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "nowPage">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tableView(_:heightForRowAt:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tableView.cellForRow(at: indexPath)?">
            </PersistentString>
            <PersistentString
               value = "tableView.cellForRow(at: indexPath)?.systemLayoutSizeFitting(UIView.layoutFittingCompressedSize).height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidAppear(_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiHandler.encodeEmoji(raw:):EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in EmojiHandler.encodeEmoji(raw:):EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "$0.name">
            </PersistentString>
            <PersistentString
               value = "customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenViewController.EmojiModel.init(coder:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "aDecoder.decodeObject(forKey: &quot;customEmojiUrl&quot;) as? String">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Requestor.post(url:rawJson:data:completion:):Requestor.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(data: bodyData)">
            </PersistentString>
            <PersistentString
               value = "request.httpAdditionalHeaders">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.maxScroll.getter:ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.getNotSafeAreaSize()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
