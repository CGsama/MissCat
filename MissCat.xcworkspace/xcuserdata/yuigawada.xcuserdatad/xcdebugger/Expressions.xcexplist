<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "NoteCellViewModel.setCell():NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.onOtherNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PagerTabStripViewController.pageWidth.getter:PagerTabStripViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "containerView.bounds.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Api.fullUrl(_:):ApiUrl.swift">
         <PersistentStrings>
            <PersistentString
               value = "Api.instance">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewModel.updateFile(id:edited:):PostViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "attachmentFiles[0].id">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.init(type:includeReplies:onlyFiles:userId:listId:disposeBag:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellsModel">
            </PersistentString>
            <PersistentString
               value = "type.needsStreaming ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PollView.getPollBarView(name:rate:isVoted:):PollView.swift">
         <PersistentStrings>
            <PersistentString
               value = "pollBarView.center">
            </PersistentString>
            <PersistentString
               value = "pollNameLabel.frame">
            </PersistentString>
            <PersistentString
               value = "pollBarView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupSkeltonMode():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = " fileImageView.arrangedSubviews.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.viewDidAppear(_:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionSettingsViewController.handleGesture(with:):ReactionSettingsViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " gesture.view">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.setupNavTab():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionCell.isMyReaction.didset:ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "isMyReaction">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PostModel.uploadFile(_:completion:):PostModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "result.id">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.shapeCell(item:cachedNotes:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.displayName">
            </PersistentString>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
            <PersistentString
               value = "item.note">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.viewDidAppear(_:):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "blurAnimator?.state">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MFMEngine.shapeModel(_:):MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellMode.myNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:data:fileType:type:missingCount:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "auth.getAPIKey()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.tappedReaction(noteId:hasMarked:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "StartViewController.summon(after:):StartViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "CGFloat(30 * sign)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidLoad():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " MisskeyKit.auth.appSecret">
            </PersistentString>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
            <PersistentString
               value = "UIScreen.main.bounds.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.fitToKeyboard(keyboardHeight:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.bottomStackView.frame.height ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCellViewModel.getReactions(_:):NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.notification():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "error">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupProfileGesture():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "iconView.isUserInteractionEnabled">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PhotoEditorViewController.viewDidLoad():PhotoEditorViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tableView(_:willDisplay:forRowAt:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "state.cellCount - indexPath.row">
            </PersistentString>
            <PersistentString
               value = "cellHeightCache">
            </PersistentString>
            <PersistentString
               value = "state.cellCompleted">
            </PersistentString>
            <PersistentString
               value = "state.cellCount">
            </PersistentString>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.viewDidLoad():PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "targetNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GIFImageView.isGif(url:):GIFImageView+MissCat.swift">
         <PersistentStrings>
            <PersistentString
               value = "url.ext">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PageViewController.nowIndex.willset:PageViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.viewDidAppear(_:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainTableView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationCell.initialize():NotificationCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "defaultNoteBottomConstraint">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MisskeyTextView.point(inside:with:):MisskeyTextView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.attributedText.attribute(.link, at: startIndex, effectiveRange: nil)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in ReactionGenModel.setNextDefaultEmojis():ReactionGenModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "maxOnceLoad">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in StartViewController.summon(after:):StartViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "CGFloat(30 * sign)">
            </PersistentString>
            <PersistentString
               value = "comp.frame.origin.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.showNotificationBanner(icon:notification:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tabBarController?.view.frame.origin.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in EmojiHandler.encodeEmoji(raw:):EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "$0.name">
            </PersistentString>
            <PersistentString
               value = "customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.setupInitialCell():TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "initialLoaded">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenModel.getHistoryEmojis():ReactionGenModel.swift">
      </ContextState>
      <ContextState
         contextName = "YanagiText.transformText():YanagiText.swift">
         <PersistentStrings>
            <PersistentString
               value = "attachmentList">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.showNotificationsView():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.notificationsView!.frame">
            </PersistentString>
            <PersistentString
               value = "self.notificationsViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PanelMenuViewController.viewWillAppear(_:):PanelMenuViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "itemView.frame.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tappedHome():TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainTableView.cellForRow(at: zeroIndexPath) ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tabItems():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupReactionCell(_:_:_:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.reactionsCollectionView.dequeueReusableCell(withReuseIdentifier: &quot;ReactionCell&quot;, for: indexPath)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewControllers():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MisskeyTextView.showMFM():MisskeyTextView.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentUserId">
            </PersistentString>
            <PersistentString
               value = "attachmentList">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.analyzeHyperLink(_:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "header">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.initialize(hasFile:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.fileImageView.arrangedSubviews">
            </PersistentString>
            <PersistentString
               value = "self.fileImageHeightConstraint">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AuthWebViewController.webView(_:didFinish:):AuthWebViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.misskeyInstance">
            </PersistentString>
            <PersistentString
               value = "self.appSecret">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.showNSFWSettings():PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "panelMenu.tapTrigger">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in PostViewController.imagePickerController(_:didFinishPickingMediaWithInfo:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "session.status">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.showProfileView(userId:isMe:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "navigationController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PollView.setPoll(with:):PollView.swift">
         <PersistentStrings>
            <PersistentString
               value = "votesCountSum">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(id:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.setBlurAnimation():ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "blurAnimator?.state">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCellViewModel.getDisplayName(_:):NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.input.nameYanagi.font?.fontName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.changeInstance(instance:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "Api.instance">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setCommentRenoteCell():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "delegate">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.initialize():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "reactionsStackView.arrangedSubviews.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tappedHome():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "previousPage">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.setupView.getter:NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "onOtherNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(allClear:baseNoteId:baseEqual:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.shapeNote(identifier:note:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "treatedNote[identifier]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidAppear(_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "footerTab">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #3 in HomeViewController.setupCell(_:_:_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in MissCatTableView.keepScrollPosition(reload:):MissCatTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.contentOffset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #6 in PollView.setPoll(with:):PollView.swift">
         <PersistentStrings>
            <PersistentString
               value = "count / votesCountSum">
            </PersistentString>
            <PersistentString
               value = "votesCountSum">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.tappedReaction(noteId:hasMarked:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel.filter({ $0.baseNoteId == noteId })">
            </PersistentString>
            <PersistentString
               value = "self.hasReactionGenCell">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.viewWillAppear(_:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.maxScroll.getter:ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.pagerTab.frame.origin.y">
            </PersistentString>
            <PersistentString
               value = " self.getSafeAreaSize().height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.binding(viewModel:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Api.instance.didset:ApiUrl.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.instance">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.getFooterTabSize(height:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "bottomPadding">
            </PersistentString>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiView.adjustFontSize():EmojiView.swift">
         <PersistentStrings>
            <PersistentString
               value = "font.pointSize">
            </PersistentString>
            <PersistentString
               value = " previousLabelWidth ">
            </PersistentString>
            <PersistentString
               value = "frame.width - labelWidth">
            </PersistentString>
            <PersistentString
               value = " previousLabelWidth == labelWidth">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.delegate.didset:NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "delegate">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MFMEngine.generatePlaneString(string:font:):MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = " font.fontName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in TimelineModel.loadNotes(with:completion:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "option">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MFMEngine.generateAsyncImageView(_:):MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = "imageUrl.ext">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(_:didFailToRegisterForRemoteNotificationsWithError:):AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "error.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:data:type:missingCount:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "response!.statusCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCellViewModel.shapeNote(identifier:note:noteId:isReply:externalEmojis:isDetailMode:):NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.input.noteYanagi.font?.fontName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostDetailViewController.item.didset:PostDetailViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.State.cellCompleted.getter:TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellCount % loadLimit">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in YanagiText.transformText():YanagiText.swift">
         <PersistentStrings>
            <PersistentString
               value = "estimatedRect.origin.x.isFinite">
            </PersistentString>
            <PersistentString
               value = "self.attachmentList">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in NoteCell.binding(viewModel:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.reactionsCollectionView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in ReactionGenViewModel.emojisList.getter:ReactionGenViewModel.swift">
      </ContextState>
      <ContextState
         contextName = "PagerTabStripViewController.updateContent():PagerTabStripViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.bounds.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.setupNotificationsVC():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "notificationsViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.scrollViewDidScroll(_:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tlScrollBegining">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MissCatTableView.keepScrollPosition(reload:):MissCatTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "contentOffset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiHandler.encodeEmoji(raw:):EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.changeSkeltonState(on:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = " fileImageView.arrangedSubviews.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in TimelineViewModel.updateReaction(targetNoteId:reaction:isMyReaction:plus:needReloading:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel[targetIndex].reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiView.setEmoji():EmojiView.swift">
         <PersistentStrings>
            <PersistentString
               value = "emoji.customEmojiUrl">
            </PersistentString>
            <PersistentString
               value = "emojiImageView.isHidden">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupCollectionView():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "agoLabel">
            </PersistentString>
            <PersistentString
               value = "reactionsCollectionView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in ReactionGenModel.getCustomEmojis():ReactionGenModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "7 - (emojis.count % 7)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.resetReactionGenCell(index:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.reactionGenCellIndex">
            </PersistentString>
            <PersistentString
               value = "self.cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in TimelineModel.loadNotes(with:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "posts[0]">
            </PersistentString>
            <PersistentString
               value = "posts[3]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewModel.loadNotes(untilId:completion:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MisskeyTextView.isCached.getter:MisskeyTextView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.currentNoteId">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.timelineDidScroll(_:scroll:):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pagerTab.frame.origin.y">
            </PersistentString>
            <PersistentString
               value = "containerScrollView.contentOffset.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:data:fileType:type:missingCount:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "resultJson.decodeJSON(type)">
            </PersistentString>
            <PersistentString
               value = "json">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenViewController.viewWillAppear(_:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "onPostViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in FileContainerCell.transform(with:and:):FileContainerCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "image?">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TosViewController.tapped(_:):TosViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "agreed">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.setupCell(_:_:_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.reactions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.viewDidLoad():TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.mainTableView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.shapeCell(item:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "cachedNote">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MissCatTableView.performBatchUpdates(_:completion:):MissCatTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "onTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.Emojis.getCustom(completion:):Emoji.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.customEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCellViewModel.getDisplayName(_:):NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.input.nameYanagi.getAttachments()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineModel.loadNotes(with:completion:):TimelineModel.swift">
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.loadNotes(untilId:completion:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "includeReplies">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PagerTabStripViewController.scrollViewWillBeginDragging(_:):PagerTabStripViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.contentOffset.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in HomeViewModel.init(disposeBag:):HomeViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "posts">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationsModel.convertNotification(_:):NotificationModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "target as?  NotificationModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Cache.saveToStorage(data:url:):Cache.swift">
         <PersistentStrings>
            <PersistentString
               value = "error">
            </PersistentString>
            <PersistentString
               value = "path.absoluteString">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.setupCell(_:_:_:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "itemCell.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationCell.generateEmojiView():NotificationCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame">
            </PersistentString>
            <PersistentString
               value = "basePosition">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostDetailViewController.loadView():PostDetailViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.tableView(_:heightForRowAt:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tableView.cellForRow(at: indexPath)?">
            </PersistentString>
            <PersistentString
               value = "tableView.cellForRow(at: indexPath)?.systemLayoutSizeFitting(UIView.layoutFittingCompressedSize).height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmojiHandler.init():EmojiHandler.swift">
         <PersistentStrings>
            <PersistentString
               value = "defaultEmojis">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tableView(_:estimatedHeightForRowAt:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tableView.frame">
            </PersistentString>
            <PersistentString
               value = "cellHeightCache">
            </PersistentString>
            <PersistentString
               value = "viewModel.cellsModel.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewController.tappedReply(note:):TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainTableView.visibleCells.startIndex">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavBarPageViewController.touchesMoved(_:with:):NavBarPageViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "dxProportion">
            </PersistentString>
            <PersistentString
               value = "self.view.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.parent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCellViewModel.getReactions():NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = " self.reactionsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PollView.adjustViewHeight():PollView.swift">
         <PersistentStrings>
            <PersistentString
               value = "frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setupComponents():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.noteView.attributedText">
            </PersistentString>
            <PersistentString
               value = "self.iconView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.loadUntilNotes(completion:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel[self.cellsModel.count - 1]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(_:didRegisterForRemoteNotificationsWithDeviceToken:):AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(data: deviceToken, encoding: .utf8)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCellViewModel.searchUrl(from:):NoteCellViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.note">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AuthWebViewController.setupSignup(misskeyInstance:appSecret:):AuthWebViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " URL(string: &quot;https://misskey.io&quot;)!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FileContainer.collectionView(_:didSelectItemAt:):FileContainer.swift">
         <PersistentStrings>
            <PersistentString
               value = "noteCellDelegate">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MisskeyKit.Streaming.handleEvent(rawJson:):Streaming.swift">
         <PersistentStrings>
            <PersistentString
               value = "ids[id]">
            </PersistentString>
            <PersistentString
               value = "channel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #3 in closure #1 in closure #1 in TimelineModel.loadNotes(with:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "posts">
            </PersistentString>
            <PersistentString
               value = "post._featuredId_">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.setupFileImage(_:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.fileImageHeightConstraint">
            </PersistentString>
            <PersistentString
               value = "self.fileImageView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenViewController.EmojiModel.init(coder:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "aDecoder.decodeObject(forKey: &quot;customEmojiUrl&quot;) as? String">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in String.hyperLink():MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = "String($0.suffix(1))">
            </PersistentString>
            <PersistentString
               value = "$0">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationsViewController.setupCell(_:_:_:):NotificationsViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewModel.cellsModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostDetailModel.convertReplies(_:):PostDetailModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "0">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.navigationController(_:willShow:animated:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "nowPage">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Cache.getUrlData(on:):Cache.swift">
         <PersistentStrings>
            <PersistentString
               value = "rawUrl.sha256()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenViewController.collectionView(_:willDisplay:forItemAt:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellLoading">
            </PersistentString>
            <PersistentString
               value = "collectionView.visibleCells.count">
            </PersistentString>
            <PersistentString
               value = "previousCellCount">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.updateReaction(targetNoteId:reaction:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cellsModel[targetIndex]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in ReactionGenViewController.collectionView(_:willDisplay:forItemAt:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cellLoading">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.shapeCell(item:isDetailMode:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "pollViewHeightConstraint.constant">
            </PersistentString>
            <PersistentString
               value = "self.noteView.font?.fontSize">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PagerTabStripViewController.scrollViewDidScroll(_:):PagerTabStripViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.contentOffset.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:type:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.statusCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.scrollViewDidScroll(_:):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView as! UIScrollView">
            </PersistentString>
            <PersistentString
               value = "scrollView.contentOffset.y">
            </PersistentString>
            <PersistentString
               value = "scrollView.contentOffset.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ThemeViewController.viewDidLoad():ThemeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tables">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in MissCatTableView.keepScrollPosition(reload:):MissCatTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "(afterContentSize.height - beforeContentSize.height)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NoteCell.binding(viewModel:):NoteCell.swift">
      </ContextState>
      <ContextState
         contextName = "TimelineViewModel.getCell(cell:item:):TimelineViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.cachedNotes">
            </PersistentString>
            <PersistentString
               value = "item.ago">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "String.hyperLink():MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = "hypered">
            </PersistentString>
            <PersistentString
               value = " result.regexMatches(pattern: normalLink).map { $0[0] }">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FileContainerCell.transform(with:and:):FileContainerCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "fileModel.thumbnailUrl">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PostViewController.viewWillAppear(_:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.iconImageView.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in MFMEngine.init(with:and:lineHeight:):MFMEngine.swift">
         <PersistentStrings>
            <PersistentString
               value = "yanagi.font?.pointSize">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.getCellModel(_:):TimelineModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "post">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewDidLayoutSubviews():HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = " self.pageView.frame.origin.y">
            </PersistentString>
            <PersistentString
               value = "self.pageView.frame.height">
            </PersistentString>
            <PersistentString
               value = "self.view.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.footerTab.frame.origin.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.setPlayIconImage(on:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "parentView.center">
            </PersistentString>
            <PersistentString
               value = "playIconImageView.center">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationCell.shapeCell(item:):NotificationCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.shapedDisplayName">
            </PersistentString>
            <PersistentString
               value = "item.fromUser?">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MisskeyKit.handleAPI&lt;A&gt;(needApiKey:api:params:type:callback:):MisskeyKit.swift">
         <PersistentStrings>
            <PersistentString
               value = "auth.getAPIKey()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in AppDelegate.application(_:didRegisterForRemoteNotificationsWithDeviceToken:):AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "task.error?.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in TimelineViewController.setupDataSource():TimelineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.mainTableView.scrollsToTop">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #3 in NoteCell.binding(viewModel:noteId:):NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.commentRenoteView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimelineModel.hyperUser(note:):TimelineModel.swift">
      </ContextState>
      <ContextState
         contextName = "ReactionCell.loadNib():ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "UINib(nibName: &quot;ReactionCell&quot;, bundle: Bundle.main).instantiate(withOwner: self, options: nil).first">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in PostViewController.setupCell(_:_:_:):PostViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cell.contentView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Requestor.post(url:rawJson:data:completion:):Requestor.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(data: bodyData)">
            </PersistentString>
            <PersistentString
               value = "request.httpAdditionalHeaders">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionGenViewController.setupCell(_:_:_:):ReactionGenViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.defaultEmoji">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ReactionCell.changeCornerRadius():ReactionCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.layer.cornerRadius">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in ProfileViewController.setBlurAnimation():ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "$0">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NoteCell.layoutSubviews():NoteCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "onOtherNote">
            </PersistentString>
            <PersistentString
               value = "self.replyButton.titleLabel?.font">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
